#1: react 引入大图片
	style={{
						backgroundImage: `url(${wheel_bg})`,
					}}

# 2:判断环境 

export const IS_DEV_MODE: boolean = __PROJECT__.IS_DEV;

export const PROJECT_ENV: ProjectEnv = __PROJECT__.ENV || ProjectEnv.Online;

  <% if(process.env.NODE_ENV === 'development') { %>
     <script src="https://unpkg.com/vconsole@latest/dist/vconsole.min.js"></script>
  <script>
  const vConsole = new VConsole();
  </script>
    <% } 
    %>

# 3:数据加密：
const secretKey = 'guidKey';
// 加密字符串
const encrypt = (txt: string) => {
	return CryptoJS.AES.encrypt(txt, secretKey).toString();
};
// 解密字符串
const decrypt = (txt: string) => {
	return CryptoJS.AES.decrypt(txt, secretKey).toString(CryptoJS.enc.Utf8);
};

# 4: 图片加载失败 可优化的地方
	<img src={activityInfo.userIcon} onError={(e) => (e.target.src = defaultUserHeadImg)}></img>

# 5：钉钉 支付宝 title
<script src="http://g.alicdn.com/dingding/dingtalk-jsapi/2.3.0/dingtalk.open.js"></script>
  <script src="https://a.alipayobjects.com/g/component/antbridge/1.1.4/antbridge.min.js"> </script>

    // dd.ready(function () {
    //   dd.biz.navigation.setTitle({
    //     title: "123",
    //   })
    // })

    // ant.setTitle('123');

# 6: 如何让localStorage支持过期时间设置：：：：：：：：：：：：：：  https://juejin.cn/post/7040671388025225229
const store = {
  // 存储过期时间映射
  setExpireMap: (key, expire) => {
    const expireMap = localStorage.getItem("EXPIRE_MAP") || "{}";
    localStorage.setItem(
      "EXPIRE_MAP",
      JSON.stringify({
        ...JSON.parse(expireMap),
        key: expire,
      })
    );
  },
  setItem: (key, value, expire) => {
    store.setExpireMap(key, expire);
    localStorage.setItem(key, value);
  },
  getItem: (key) => {
    // 在取值之前先判断是否过期
    const expireMap = JSON.parse(localStorage.getItem("EXPIRE_MAP") || "{}");
    if (expireMap[key] && expireMap[key] < Date.now()) {
      return localStorage.getItem(key);
    } else {
      localStorage.removeItem(key);
      return null;
    }
  },
};

第二种方法
import { store } from "xijs";
// 设置带有过期时间的key
store.set("name", "dooring", Date.now() + 1000);
console.log(store.get("name"));
setTimeout(() => {
  console.log(store.get("name"));
}, 1000);

// 设置成功后的回调
store.set("dooring", "xuxiaoxi", Date.now() + 1000, (status, key, value) => {
  console.log("success");
});


# 7:offlineHandle 断网处理
import React, { useState, useEffect } from "react";
import { notification } from "antd";
import "antd/dist/antd.css";
import "./index.css";

const OfflineHandle = (props) => {
  const {
    offlineTitle = "网络已断开，请检查网络连接。",
    onlineTitle = "网络已连接",
    desc,
    duration = 4.5
  } = props;
  const [mask, setMask] = useState(false);

  const eventHandler = (event) => {
    const type = event.type === "offline" ? "error" : "success";
    console.log(desc, "desc");
    openNotification({
      type,
      title: type === "error" ? offlineTitle : onlineTitle,
      desc: type === "error" ? desc : "",
      duration
    });
    setTimeout(() => {
      setMask(event.type === "offline");
    }, 1500);
  };

  const openNotification = ({ type, title, desc, duration }) => {
    notification[type]({
      message: title,
      description: desc,
      duration
    });
  };

  useEffect(() => {
    window.addEventListener("offline", eventHandler);
    window.addEventListener("online", eventHandler);
    return () => {
      window.removeEventListener("offline", eventHandler);
      window.removeEventListener("online", eventHandler);
    };
  }, []);

  const renderOfflineMask = () => {
    if (!mask) return null;
    return (
      <div className="offline-mask">
        <h2 className="offline-mask-title">{offlineTitle}</h2>

        <p className="offline-mask-desc">{desc}</p>
      </div>
    );
  };

  return <>{renderOfflineMask()}</>;
};

export default OfflineHandle;



# 8:第一次访问页面的时候很可能会存在“白屏”等待


next12使用 swc 替换掉 babel和ts部分


# debug 用法 https://juejin.cn/post/7030584939020042254
按钮1：运行/继续 F5，真正的一步一步运行
按钮2：单步跳过(又叫逐过程) F10，按语句单步执行。当有函数时，不会进入函数。
按钮3：单步调试（又叫逐语句）F11：当有函数时，点击这个按钮，会进入这个函数内
按钮4：单步跳出 ⇧F11:如果有循环，点击该按钮，会执行到循环外面的语句。
按钮5：重启 ⇧⌘F5：
按钮5：停止 ⇧F5：


# ！！！！创建：项目辅助部分(函数 类型)   @mars-framework/core